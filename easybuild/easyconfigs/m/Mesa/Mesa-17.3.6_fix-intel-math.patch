diff -ruN orig/include/c99_math.h fix/include/c99_math.h
--- orig/include/c99_math.h	2023-05-12 10:51:56.410611000 +0200
+++ fix/include/c99_math.h	2023-05-12 10:52:22.369775000 +0200
@@ -190,7 +190,7 @@
  * undefines those functions, which in glibc 2.23, are defined as macros rather
  * than functions as in glibc 2.22.
  */
-#if __cplusplus >= 201103L && (__GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ >= 23))
+#if __cplusplus >= 201103L && (__GLIBC__ > 2 || (__GLIBC__ == 2 && __GLIBC_MINOR__ >= 23 && __GLIBC_MINOR__ < 28 ))
 #include <cmath>
 
 using std::fpclassify;
diff -ruN orig/src/gallium/auxiliary/util/u_format_tests.c fix/src/gallium/auxiliary/util/u_format_tests.c
--- orig/src/gallium/auxiliary/util/u_format_tests.c	2023-05-12 12:06:46.907462000 +0200
+++ fix/src/gallium/auxiliary/util/u_format_tests.c	2023-05-12 12:06:26.110530000 +0200
@@ -919,7 +919,7 @@
    /* Max representable value */
    {PIPE_FORMAT_R16_FLOAT, PACKED_1x16(0xffff), PACKED_1x16(0x7bff), UNPACKED_1x1(    65504.0, 0.0, 0.0, 1.0)},
 
-#if !defined(PIPE_CC_MSVC)
+#if defined(PIPE_CC_MSVC)
 
    /* NaNs */
    {PIPE_FORMAT_R16_FLOAT, PACKED_1x16(0xffff), PACKED_1x16(0x7c01), UNPACKED_1x1(        NAN, 0.0, 0.0, 1.0)},
diff -ruN orig/src/gallium/drivers/swr/rasterizer/jitter/builder_misc.cpp fix/src/gallium/drivers/swr/rasterizer/jitter/builder_misc.cpp
--- orig/src/gallium/drivers/swr/rasterizer/jitter/builder_misc.cpp	2023-05-12 13:18:41.864236000 +0200
+++ fix/src/gallium/drivers/swr/rasterizer/jitter/builder_misc.cpp	2023-05-12 13:18:33.025187000 +0200
@@ -54,13 +54,13 @@
         mant = uf & 0x007FFFFF;
 
         // Check for out of range
-        if (std::isnan(val))
+        if (::isnan(val))
         {
             exp = 0x1F;
             mant = 0x200;
             sign = 1;                     // set the sign bit for NANs
         }
-        else if (std::isinf(val))
+        else if (::isinf(val))
         {
             exp = 0x1f;
             mant = 0x0;
diff -ruN orig/src/gallium/drivers/swr/rasterizer/memory/Convert.h fix/src/gallium/drivers/swr/rasterizer/memory/Convert.h
--- orig/src/gallium/drivers/swr/rasterizer/memory/Convert.h	2023-05-12 13:02:49.332222000 +0200
+++ fix/src/gallium/drivers/swr/rasterizer/memory/Convert.h	2023-05-12 13:12:49.981321000 +0200
@@ -32,7 +32,7 @@
 #pragma warning(disable: 4723)
 #endif
 
-#include <cmath>
+#include <math.h>
 
 //////////////////////////////////////////////////////////////////////////
 /// @brief Convert an IEEE 754 16-bit float to an 32-bit single precision
@@ -169,13 +169,13 @@
     mant = uf & 0x007FFFFF;
 
     // Check for out of range
-    if (std::isnan(val))
+    if (::isnan(val))
     {
         exp = 0x1F;
         mant = 0x200;
         sign = 1;                     // set the sign bit for NANs
     }
-    else if (std::isinf(val))
+    else if (::isinf(val))
     {
         exp = 0x1f;
         mant = 0x0;
